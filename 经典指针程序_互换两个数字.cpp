/*
时间：2022/2/5 0：46
目的：熟悉并掌握基本类型指针
*/

#include <stdio.h>


void huhuan(int a, int b) {
	int t;

	t = a;
	a = b;
	b = t;
	
	return;
}
//不能完成互换功能
int main(void) {
	int a = 3;
	int b = 5;
	huhuan(a, b);
	printf("a = %d , b = %d\n", a, b);
	return 0;
}
/*
	运行结果：
		a = 3 , b = 5（不能实现互换）
	原因：
		1、修改了函数huhuan中a，b的值，函数huhuan操作的是形参a，b 不是主函数a，b
		2、为形参a，b分配存储空间，执行完huhuan函数之后，为形参a，b分配的存储空间被释放
		3、函数huhuan执行完之后形参a，b已经没有，但主程序a，b依旧存在
		4、互换的是形参a，b的值，和主函数的a，b没有影响
		5、所以运行结果a=3，b=5
	关于形参实参的总结：
		1、 个数相同 位置一 一对应 数据类型必须相互兼容
		2、 形参变量只有在函数被调用时才会分配内存，调用结束后，立刻释放内存，所以形参变量只有在函数
			内部有效，不能在函数外部使用。
		3、 实参可以是常量、变量、表达式、函数等，在进行函数调用时，它们都必须有确定的值，以便把这些
			值传送给形参，所以应该提前用赋值、输入等办法使实参获得确定值。
		4、 函数调用中发生的数据传递是单向的，只能把实参的值传递给形参，而不能把形参的值反向地传递给
			实参；换句话说，一旦完成数据的传递，实参和形参就再也没有瓜葛了，所以，在函数调用过程中，
			形参的值发生改变并不会影响实参。

*/